// <auto-generated />
using System;
using ByteDecoder.Queryology.Example.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Queryology.Example.Models;

namespace ByteDecoder.Queryology.Example.Migrations
{
    [DbContext(typeof(EfCoreContext))]
    partial class EfCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Queryology.Example.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Name = "Mary Hogan"
                        },
                        new
                        {
                            AuthorId = 2,
                            Name = "Molly Kramer"
                        },
                        new
                        {
                            AuthorId = 3,
                            Name = "Rhonda Ferguson"
                        },
                        new
                        {
                            AuthorId = 4,
                            Name = "Jessie Salinas"
                        },
                        new
                        {
                            AuthorId = 5,
                            Name = "Maryam Jenkins"
                        },
                        new
                        {
                            AuthorId = 6,
                            Name = "Adele Gonzalez"
                        },
                        new
                        {
                            AuthorId = 7,
                            Name = "Yasmine Chapman"
                        });
                });

            modelBuilder.Entity("Queryology.Example.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Description = "Learn C# Series",
                            ImageUrl = "www.sample.com",
                            Price = 25.00m,
                            PublishedOn = new DateTime(2002, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "The Ematoma United",
                            Title = "C# Volume 1"
                        },
                        new
                        {
                            BookId = 2,
                            Description = "Learn C# Series",
                            ImageUrl = "www.sample.com",
                            Price = 27.00m,
                            PublishedOn = new DateTime(2003, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "The Ematoma United",
                            Title = "C# Volume 2"
                        },
                        new
                        {
                            BookId = 3,
                            Description = "Learn C# Series",
                            ImageUrl = "www.sample.com",
                            Price = 30.00m,
                            PublishedOn = new DateTime(2004, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher = "The Ematoma United",
                            Title = "C# Volume 3"
                        });
                });

            modelBuilder.Entity("Queryology.Example.Models.BookAuthor", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthor");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 5,
                            Order = 1
                        },
                        new
                        {
                            BookId = 1,
                            AuthorId = 7,
                            Order = 2
                        },
                        new
                        {
                            BookId = 1,
                            AuthorId = 2,
                            Order = 3
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            Order = 1
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 4,
                            Order = 2
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 7,
                            Order = 3
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 1,
                            Order = 1
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 2,
                            Order = 2
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3,
                            Order = 3
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 4,
                            Order = 4
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 5,
                            Order = 5
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 6,
                            Order = 6
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 7,
                            Order = 7
                        });
                });

            modelBuilder.Entity("Queryology.Example.Models.PriceOffer", b =>
                {
                    b.Property<int>("PriceOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("PromotionalText")
                        .HasColumnType("TEXT");

                    b.HasKey("PriceOfferId");

                    b.HasIndex("BookId")
                        .IsUnique();

                    b.ToTable("PriceOffers");

                    b.HasData(
                        new
                        {
                            PriceOfferId = 1,
                            BookId = 1,
                            NewPrice = 15.00m,
                            PromotionalText = "Get the saga!!!"
                        },
                        new
                        {
                            PriceOfferId = 2,
                            BookId = 2,
                            NewPrice = 23.99m,
                            PromotionalText = "Do not be behind!!!"
                        });
                });

            modelBuilder.Entity("Queryology.Example.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumStars")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VoterName")
                        .HasColumnType("TEXT");

                    b.HasKey("ReviewId");

                    b.HasIndex("BookId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            BookId = 1,
                            Comment = "Supper Lupper",
                            NumStars = 5,
                            VoterName = "Jacinto Squire"
                        },
                        new
                        {
                            ReviewId = 2,
                            BookId = 1,
                            Comment = "Noyhing to say...",
                            NumStars = 3,
                            VoterName = "Lucretia Wells"
                        },
                        new
                        {
                            ReviewId = 3,
                            BookId = 2,
                            Comment = "Outstandingly thought out! This is new school.",
                            NumStars = 5,
                            VoterName = "Jacinto Squire"
                        },
                        new
                        {
                            ReviewId = 4,
                            BookId = 2,
                            Comment = "Nice use of magenta in this concept!",
                            NumStars = 3,
                            VoterName = "Lucretia Wells"
                        },
                        new
                        {
                            ReviewId = 5,
                            BookId = 3,
                            Comment = "So radiant and splendid!!",
                            NumStars = 5,
                            VoterName = "Jacinto Squire"
                        },
                        new
                        {
                            ReviewId = 6,
                            BookId = 3,
                            Comment = "This shot blew my mind.",
                            NumStars = 3,
                            VoterName = "Julia Akashiya"
                        },
                        new
                        {
                            ReviewId = 7,
                            BookId = 3,
                            Comment = "Fabulous work you have here.",
                            NumStars = 5,
                            VoterName = "Morgana Avila"
                        },
                        new
                        {
                            ReviewId = 8,
                            BookId = 3,
                            Comment = "This shapes has navigated right into my heart.",
                            NumStars = 3,
                            VoterName = "Danica Ayala"
                        });
                });

            modelBuilder.Entity("Queryology.Example.Models.BookAuthor", b =>
                {
                    b.HasOne("Queryology.Example.Models.Author", "Author")
                        .WithMany("BooksLink")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Queryology.Example.Models.Book", "Book")
                        .WithMany("AuthorsLink")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Queryology.Example.Models.PriceOffer", b =>
                {
                    b.HasOne("Queryology.Example.Models.Book", null)
                        .WithOne("Promotion")
                        .HasForeignKey("Queryology.Example.Models.PriceOffer", "BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Queryology.Example.Models.Review", b =>
                {
                    b.HasOne("Queryology.Example.Models.Book", null)
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
